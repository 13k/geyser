// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: IBroadcastService.

package geyser

import "net/http"

// SchemaBroadcastService stores the SchemaInterfaces for interface IBroadcastService.
var SchemaBroadcastService = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod: http.MethodPost,
				Name:       "PostGameDataFrameRTMP",
				Params: NewSchemaMethodParams(
					&SchemaMethodParam{
						Description: "AppID of the game being broadcasted",
						Name:        "appid",
						Optional:    false,
						Type:        "uint32",
					},
					&SchemaMethodParam{
						Description: "Broadcasters SteamID",
						Name:        "steamid",
						Optional:    false,
						Type:        "uint64",
					},
					&SchemaMethodParam{
						Description: "Valid RTMP token for the Broadcaster",
						Name:        "rtmp_token",
						Optional:    false,
						Type:        "string",
					},
					&SchemaMethodParam{
						Description: "game data frame expressing current state of game (string, zipped, whatever)",
						Name:        "frame_data",
						Optional:    false,
						Type:        "string",
					},
				),
				Undocumented: false,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "PostChatMessage",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "MuteBroadcastChatUser",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "RemoveUserChatText",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetRTMPInfo",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "SetRTMPInfo",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "UpdateChatMessageFlair",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetBroadcastUploadStats",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetBroadcastViewerStats",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "StartBuildClip",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetBuildClipStatus",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetClipDetails",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IBroadcastService",
		Undocumented: false,
	},
)

// BroadcastService represents interface IBroadcastService.
type BroadcastService struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewBroadcastService creates a new BroadcastService interface.
func NewBroadcastService(c *Client) (*BroadcastService, error) {
	si, err := SchemaBroadcastService.Get(SchemaInterfaceKey{Name: "IBroadcastService"})

	if err != nil {
		return nil, err
	}

	s := &BroadcastService{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// BroadcastService creates a new BroadcastService interface.
func (c *Client) BroadcastService() (*BroadcastService, error) {
	return NewBroadcastService(c)
}

/*
GetBroadcastUploadStats creates a Request for interface method GetBroadcastUploadStats.

This is an undocumented method.
*/
func (i *BroadcastService) GetBroadcastUploadStats() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetBroadcastUploadStats",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &BroadcastServiceGetBroadcastUploadStats{},
	}

	return req, nil
}

/*
GetBroadcastViewerStats creates a Request for interface method GetBroadcastViewerStats.

This is an undocumented method.
*/
func (i *BroadcastService) GetBroadcastViewerStats() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetBroadcastViewerStats",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &BroadcastServiceGetBroadcastViewerStats{},
	}

	return req, nil
}

/*
GetBuildClipStatus creates a Request for interface method GetBuildClipStatus.

This is an undocumented method.
*/
func (i *BroadcastService) GetBuildClipStatus() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetBuildClipStatus",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &BroadcastServiceGetBuildClipStatus{},
	}

	return req, nil
}

/*
GetClipDetails creates a Request for interface method GetClipDetails.

This is an undocumented method.
*/
func (i *BroadcastService) GetClipDetails() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetClipDetails",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &BroadcastServiceGetClipDetails{},
	}

	return req, nil
}

/*
GetRTMPInfo creates a Request for interface method GetRTMPInfo.

This is an undocumented method.
*/
func (i *BroadcastService) GetRTMPInfo() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetRTMPInfo",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &BroadcastServiceGetRTMPInfo{},
	}

	return req, nil
}

/*
MuteBroadcastChatUser creates a Request for interface method MuteBroadcastChatUser.

This is an undocumented method.
*/
func (i *BroadcastService) MuteBroadcastChatUser() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "MuteBroadcastChatUser",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &BroadcastServiceMuteBroadcastChatUser{},
	}

	return req, nil
}

/*
PostChatMessage creates a Request for interface method PostChatMessage.

This is an undocumented method.
*/
func (i *BroadcastService) PostChatMessage() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "PostChatMessage",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &BroadcastServicePostChatMessage{},
	}

	return req, nil
}

/*
PostGameDataFrameRTMP creates a Request for interface method PostGameDataFrameRTMP.

Parameters

  * appid [uint32] (required): AppID of the game being broadcasted
  * steamid [uint64] (required): Broadcasters SteamID
  * rtmp_token [string] (required): Valid RTMP token for the Broadcaster
  * frame_data [string] (required): game data frame expressing current state of game (string, zipped, whatever)
*/
func (i *BroadcastService) PostGameDataFrameRTMP() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "PostGameDataFrameRTMP",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &BroadcastServicePostGameDataFrameRTMP{},
	}

	return req, nil
}

/*
RemoveUserChatText creates a Request for interface method RemoveUserChatText.

This is an undocumented method.
*/
func (i *BroadcastService) RemoveUserChatText() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "RemoveUserChatText",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &BroadcastServiceRemoveUserChatText{},
	}

	return req, nil
}

/*
SetRTMPInfo creates a Request for interface method SetRTMPInfo.

This is an undocumented method.
*/
func (i *BroadcastService) SetRTMPInfo() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "SetRTMPInfo",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &BroadcastServiceSetRTMPInfo{},
	}

	return req, nil
}

/*
StartBuildClip creates a Request for interface method StartBuildClip.

This is an undocumented method.
*/
func (i *BroadcastService) StartBuildClip() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "StartBuildClip",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &BroadcastServiceStartBuildClip{},
	}

	return req, nil
}

/*
UpdateChatMessageFlair creates a Request for interface method UpdateChatMessageFlair.

This is an undocumented method.
*/
func (i *BroadcastService) UpdateChatMessageFlair() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "UpdateChatMessageFlair",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &BroadcastServiceUpdateChatMessageFlair{},
	}

	return req, nil
}
