// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: ICloudService.

package geyser

import "net/http"

// SchemaCloudService stores the SchemaInterfaces for interface ICloudService.
var SchemaCloudService = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetUploadServerInfo",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "BeginHTTPUpload",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "CommitHTTPUpload",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetFileDetails",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "EnumerateUserFiles",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "Delete",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "ICloudService",
		Undocumented: true,
	},
)

// CloudService represents interface ICloudService.
//
// This is an undocumented interface.
type CloudService struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewCloudService creates a new CloudService interface.
func NewCloudService(c *Client) (*CloudService, error) {
	si, err := SchemaCloudService.Get(SchemaInterfaceKey{Name: "ICloudService"})

	if err != nil {
		return nil, err
	}

	s := &CloudService{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// CloudService creates a new CloudService interface.
func (c *Client) CloudService() (*CloudService, error) {
	return NewCloudService(c)
}

/*
BeginHTTPUpload creates a Request for interface method BeginHTTPUpload.

This is an undocumented method.
*/
func (i *CloudService) BeginHTTPUpload() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "BeginHTTPUpload",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &CloudServiceBeginHTTPUpload{},
	}

	return req, nil
}

/*
CommitHTTPUpload creates a Request for interface method CommitHTTPUpload.

This is an undocumented method.
*/
func (i *CloudService) CommitHTTPUpload() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "CommitHTTPUpload",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &CloudServiceCommitHTTPUpload{},
	}

	return req, nil
}

/*
Delete creates a Request for interface method Delete.

This is an undocumented method.
*/
func (i *CloudService) Delete() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "Delete",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &CloudServiceDelete{},
	}

	return req, nil
}

/*
EnumerateUserFiles creates a Request for interface method EnumerateUserFiles.

This is an undocumented method.
*/
func (i *CloudService) EnumerateUserFiles() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "EnumerateUserFiles",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &CloudServiceEnumerateUserFiles{},
	}

	return req, nil
}

/*
GetFileDetails creates a Request for interface method GetFileDetails.

This is an undocumented method.
*/
func (i *CloudService) GetFileDetails() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetFileDetails",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &CloudServiceGetFileDetails{},
	}

	return req, nil
}

/*
GetUploadServerInfo creates a Request for interface method GetUploadServerInfo.

This is an undocumented method.
*/
func (i *CloudService) GetUploadServerInfo() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetUploadServerInfo",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &CloudServiceGetUploadServerInfo{},
	}

	return req, nil
}
