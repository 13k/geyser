// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: ICommunityService.

package geyser

import "net/http"

// SchemaCommunityService stores the SchemaInterfaces for interface ICommunityService.
var SchemaCommunityService = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetApps",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetUserPartnerEventNews",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetBestEventsForUser",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "ICommunityService",
		Undocumented: true,
	},
)

// CommunityService represents interface ICommunityService.
//
// This is an undocumented interface.
type CommunityService struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewCommunityService creates a new CommunityService interface.
func NewCommunityService(c *Client) (*CommunityService, error) {
	si, err := SchemaCommunityService.Get(SchemaInterfaceKey{Name: "ICommunityService"})

	if err != nil {
		return nil, err
	}

	s := &CommunityService{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// CommunityService creates a new CommunityService interface.
func (c *Client) CommunityService() (*CommunityService, error) {
	return NewCommunityService(c)
}

/*
GetApps creates a Request for interface method GetApps.

This is an undocumented method.
*/
func (i *CommunityService) GetApps() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetApps",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &CommunityServiceGetApps{},
	}

	return req, nil
}

/*
GetBestEventsForUser creates a Request for interface method GetBestEventsForUser.

This is an undocumented method.
*/
func (i *CommunityService) GetBestEventsForUser() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetBestEventsForUser",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &CommunityServiceGetBestEventsForUser{},
	}

	return req, nil
}

/*
GetUserPartnerEventNews creates a Request for interface method GetUserPartnerEventNews.

This is an undocumented method.
*/
func (i *CommunityService) GetUserPartnerEventNews() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetUserPartnerEventNews",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &CommunityServiceGetUserPartnerEventNews{},
	}

	return req, nil
}
