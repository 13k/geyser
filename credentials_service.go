// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: ICredentialsService.

package geyser

import "net/http"

// SchemaCredentialsService stores the SchemaInterfaces for interface ICredentialsService.
var SchemaCredentialsService = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "ValidateEmailAddress",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "SteamGuardPhishingReport",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "ICredentialsService",
		Undocumented: true,
	},
)

// CredentialsService represents interface ICredentialsService.
//
// This is an undocumented interface.
type CredentialsService struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewCredentialsService creates a new CredentialsService interface.
func NewCredentialsService(c *Client) (*CredentialsService, error) {
	si, err := SchemaCredentialsService.Get(SchemaInterfaceKey{Name: "ICredentialsService"})

	if err != nil {
		return nil, err
	}

	s := &CredentialsService{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// CredentialsService creates a new CredentialsService interface.
func (c *Client) CredentialsService() (*CredentialsService, error) {
	return NewCredentialsService(c)
}

/*
SteamGuardPhishingReport creates a Request for interface method SteamGuardPhishingReport.

This is an undocumented method.
*/
func (i *CredentialsService) SteamGuardPhishingReport() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "SteamGuardPhishingReport",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &CredentialsServiceSteamGuardPhishingReport{},
	}

	return req, nil
}

/*
ValidateEmailAddress creates a Request for interface method ValidateEmailAddress.

This is an undocumented method.
*/
func (i *CredentialsService) ValidateEmailAddress() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "ValidateEmailAddress",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &CredentialsServiceValidateEmailAddress{},
	}

	return req, nil
}
