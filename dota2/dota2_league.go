// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: IDOTA2League.

package dota2

import (
	"github.com/13k/geyser"
	"net/http"
)

// SchemaDOTA2League stores the SchemaInterfaces for interface IDOTA2League.
var SchemaDOTA2League = geyser.MustNewSchemaInterfaces(
	&geyser.SchemaInterface{
		Methods: geyser.MustNewSchemaMethods(
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetLeagueData",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetLeagueInfoList",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetLeagueNodeResults",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetLiveGames",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetPredictionResults",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetPredictions",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetPrizePool",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IDOTA2League",
		Undocumented: true,
	},
)

// DOTA2League represents interface IDOTA2League.
//
// This is an undocumented interface.
type DOTA2League struct {
	Client    *Client
	Interface *geyser.SchemaInterface
}

// NewDOTA2League creates a new DOTA2League interface.
func NewDOTA2League(c *Client) (*DOTA2League, error) {
	si, err := SchemaDOTA2League.Get(geyser.SchemaInterfaceKey{Name: "IDOTA2League"})

	if err != nil {
		return nil, err
	}

	s := &DOTA2League{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// DOTA2League creates a new DOTA2League interface.
func (c *Client) DOTA2League() (*DOTA2League, error) {
	return NewDOTA2League(c)
}

/*
GetLeagueData creates a Request for interface method GetLeagueData.

This is an undocumented method.
*/
func (i *DOTA2League) GetLeagueData() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetLeagueData",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &DOTA2LeagueGetLeagueData{},
	}

	return req, nil
}

/*
GetLeagueInfoList creates a Request for interface method GetLeagueInfoList.

This is an undocumented method.
*/
func (i *DOTA2League) GetLeagueInfoList() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetLeagueInfoList",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &DOTA2LeagueGetLeagueInfoList{},
	}

	return req, nil
}

/*
GetLeagueNodeResults creates a Request for interface method GetLeagueNodeResults.

This is an undocumented method.
*/
func (i *DOTA2League) GetLeagueNodeResults() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetLeagueNodeResults",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &DOTA2LeagueGetLeagueNodeResults{},
	}

	return req, nil
}

/*
GetLiveGames creates a Request for interface method GetLiveGames.

This is an undocumented method.
*/
func (i *DOTA2League) GetLiveGames() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetLiveGames",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &DOTA2LeagueGetLiveGames{},
	}

	return req, nil
}

/*
GetPredictionResults creates a Request for interface method GetPredictionResults.

This is an undocumented method.
*/
func (i *DOTA2League) GetPredictionResults() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetPredictionResults",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &DOTA2LeagueGetPredictionResults{},
	}

	return req, nil
}

/*
GetPredictions creates a Request for interface method GetPredictions.

This is an undocumented method.
*/
func (i *DOTA2League) GetPredictions() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetPredictions",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &DOTA2LeagueGetPredictions{},
	}

	return req, nil
}

/*
GetPrizePool creates a Request for interface method GetPrizePool.

This is an undocumented method.
*/
func (i *DOTA2League) GetPrizePool() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetPrizePool",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &DOTA2LeagueGetPrizePool{},
	}

	return req, nil
}
