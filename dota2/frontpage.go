// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: IFrontpage.

package dota2

import (
	"github.com/13k/geyser"
	"net/http"
)

// SchemaFrontpage stores the SchemaInterfaces for interface IFrontpage.
var SchemaFrontpage = geyser.MustNewSchemaInterfaces(
	&geyser.SchemaInterface{
		Methods: geyser.MustNewSchemaMethods(
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "cell_data",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IFrontpage",
		Undocumented: true,
	},
)

// Frontpage represents interface IFrontpage.
//
// This is an undocumented interface.
type Frontpage struct {
	Client    *Client
	Interface *geyser.SchemaInterface
}

// NewFrontpage creates a new Frontpage interface.
func NewFrontpage(c *Client) (*Frontpage, error) {
	si, err := SchemaFrontpage.Get(geyser.SchemaInterfaceKey{Name: "IFrontpage"})

	if err != nil {
		return nil, err
	}

	s := &Frontpage{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// Frontpage creates a new Frontpage interface.
func (c *Client) Frontpage() (*Frontpage, error) {
	return NewFrontpage(c)
}

/*
CellData creates a Request for interface method cell_data.

This is an undocumented method.
*/
func (i *Frontpage) CellData() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "cell_data",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &FrontpageCellData{},
	}

	return req, nil
}
