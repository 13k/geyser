// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: ITournaments.

package dota2

import (
	"github.com/13k/geyser"
	"net/http"
)

// SchemaTournaments stores the SchemaInterfaces for interface ITournaments.
var SchemaTournaments = geyser.MustNewSchemaInterfaces(
	&geyser.SchemaInterface{
		Methods: geyser.MustNewSchemaMethods(
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetGroupStandings",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetLiveLeagueGames",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetTournamentBrackets",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetTournamentInfo",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetTournamentPlayers",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&geyser.SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetTournamentSeriesDetails",
				Params:       geyser.NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "ITournaments",
		Undocumented: true,
	},
)

// Tournaments represents interface ITournaments.
//
// This is an undocumented interface.
type Tournaments struct {
	Client    *Client
	Interface *geyser.SchemaInterface
}

// NewTournaments creates a new Tournaments interface.
func NewTournaments(c *Client) (*Tournaments, error) {
	si, err := SchemaTournaments.Get(geyser.SchemaInterfaceKey{Name: "ITournaments"})

	if err != nil {
		return nil, err
	}

	s := &Tournaments{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// Tournaments creates a new Tournaments interface.
func (c *Client) Tournaments() (*Tournaments, error) {
	return NewTournaments(c)
}

/*
GetGroupStandings creates a Request for interface method GetGroupStandings.

This is an undocumented method.
*/
func (i *Tournaments) GetGroupStandings() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetGroupStandings",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TournamentsGetGroupStandings{},
	}

	return req, nil
}

/*
GetLiveLeagueGames creates a Request for interface method GetLiveLeagueGames.

This is an undocumented method.
*/
func (i *Tournaments) GetLiveLeagueGames() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetLiveLeagueGames",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TournamentsGetLiveLeagueGames{},
	}

	return req, nil
}

/*
GetTournamentBrackets creates a Request for interface method GetTournamentBrackets.

This is an undocumented method.
*/
func (i *Tournaments) GetTournamentBrackets() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetTournamentBrackets",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TournamentsGetTournamentBrackets{},
	}

	return req, nil
}

/*
GetTournamentInfo creates a Request for interface method GetTournamentInfo.

This is an undocumented method.
*/
func (i *Tournaments) GetTournamentInfo() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetTournamentInfo",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TournamentsGetTournamentInfo{},
	}

	return req, nil
}

/*
GetTournamentPlayers creates a Request for interface method GetTournamentPlayers.

This is an undocumented method.
*/
func (i *Tournaments) GetTournamentPlayers() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetTournamentPlayers",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TournamentsGetTournamentPlayers{},
	}

	return req, nil
}

/*
GetTournamentSeriesDetails creates a Request for interface method GetTournamentSeriesDetails.

This is an undocumented method.
*/
func (i *Tournaments) GetTournamentSeriesDetails() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(geyser.SchemaMethodKey{
		Name:    "GetTournamentSeriesDetails",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TournamentsGetTournamentSeriesDetails{},
	}

	return req, nil
}
