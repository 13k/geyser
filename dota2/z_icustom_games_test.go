// Code generated by geyser. DO NOT EDIT.

package dota2_test

import (
	"github.com/13k/geyser"
	"github.com/13k/geyser/dota2"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func TestNewICustomGames(t *testing.T) {
	client, err := dota2.New()

	require.NoError(t, err)
	require.NotNil(t, client)

	ci, err := dota2.NewICustomGames(client)

	require.NoError(t, err)
	require.NotNil(t, ci)

	assert.Same(t, client, ci.Client)
	assert.NotNil(t, ci.Interface)
}

func TestICustomGames_GetGamePlayerCounts(t *testing.T) {
	var ci *dota2.ICustomGames
	var err error
	var req *geyser.Request

	client, err := dota2.New()

	require.NoError(t, err)
	require.NotNil(t, client)

	ci, err = dota2.NewICustomGames(client)

	require.NoError(t, err)
	require.NotNil(t, ci)

	req, err = ci.GetGamePlayerCounts()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, ci.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetGamePlayerCounts", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}
}

func TestICustomGames_GetPopularGames(t *testing.T) {
	var ci *dota2.ICustomGames
	var err error
	var req *geyser.Request

	client, err := dota2.New()

	require.NoError(t, err)
	require.NotNil(t, client)

	ci, err = dota2.NewICustomGames(client)

	require.NoError(t, err)
	require.NotNil(t, ci)

	req, err = ci.GetPopularGames()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, ci.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetPopularGames", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}
}

func TestICustomGames_GetSuggestedGames(t *testing.T) {
	var ci *dota2.ICustomGames
	var err error
	var req *geyser.Request

	client, err := dota2.New()

	require.NoError(t, err)
	require.NotNil(t, client)

	ci, err = dota2.NewICustomGames(client)

	require.NoError(t, err)
	require.NotNil(t, ci)

	req, err = ci.GetSuggestedGames()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, ci.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetSuggestedGames", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}
}

func TestICustomGames_GetWorkshopVoteQueue(t *testing.T) {
	var ci *dota2.ICustomGames
	var err error
	var req *geyser.Request

	client, err := dota2.New()

	require.NoError(t, err)
	require.NotNil(t, client)

	ci, err = dota2.NewICustomGames(client)

	require.NoError(t, err)
	require.NotNil(t, ci)

	req, err = ci.GetWorkshopVoteQueue()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, ci.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetWorkshopVoteQueue", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}
}
