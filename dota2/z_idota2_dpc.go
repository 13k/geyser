// Code generated by geyser. DO NOT EDIT.
// API interface: IDOTA2DPC.

package dota2

import (
	"github.com/13k/geyser"
	"github.com/13k/geyser/schema"
	"net/http"
)

// SchemaIDOTA2DPC stores the Interfaces for interface IDOTA2DPC.
var SchemaIDOTA2DPC = schema.MustNewInterfaces(
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetLeagueInfoList",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetLeagueMatchMinimal",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetLeagueNodeData",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetPlayerInfo",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetRealtimeMatchStats",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetRecentAndUpcomingMatches",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetSingleTeamInfo",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IDOTA2DPC",
		Undocumented: true,
	},
)

// IDOTA2DPC represents interface IDOTA2DPC.
//
// This is an undocumented interface.
type IDOTA2DPC struct {
	Client    *Client
	Interface *schema.Interface
}

// NewIDOTA2DPC creates a new IDOTA2DPC interface.
func NewIDOTA2DPC(c *Client) (*IDOTA2DPC, error) {
	si, err := SchemaIDOTA2DPC.Get(schema.InterfaceKey{Name: "IDOTA2DPC"})

	if err != nil {
		return nil, err
	}

	s := &IDOTA2DPC{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// IDOTA2DPC creates a new IDOTA2DPC interface.
func (c *Client) IDOTA2DPC() (*IDOTA2DPC, error) {
	return NewIDOTA2DPC(c)
}

/*
GetLeagueInfoList creates a Request for interface method GetLeagueInfoList.

This is an undocumented method.
*/
func (i *IDOTA2DPC) GetLeagueInfoList() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetLeagueInfoList",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
GetLeagueMatchMinimal creates a Request for interface method GetLeagueMatchMinimal.

This is an undocumented method.
*/
func (i *IDOTA2DPC) GetLeagueMatchMinimal() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetLeagueMatchMinimal",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
GetLeagueNodeData creates a Request for interface method GetLeagueNodeData.

This is an undocumented method.
*/
func (i *IDOTA2DPC) GetLeagueNodeData() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetLeagueNodeData",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
GetPlayerInfo creates a Request for interface method GetPlayerInfo.

This is an undocumented method.
*/
func (i *IDOTA2DPC) GetPlayerInfo() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetPlayerInfo",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
GetRealtimeMatchStats creates a Request for interface method GetRealtimeMatchStats.

This is an undocumented method.
*/
func (i *IDOTA2DPC) GetRealtimeMatchStats() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetRealtimeMatchStats",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
GetRecentAndUpcomingMatches creates a Request for interface method GetRecentAndUpcomingMatches.

This is an undocumented method.
*/
func (i *IDOTA2DPC) GetRecentAndUpcomingMatches() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetRecentAndUpcomingMatches",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
GetSingleTeamInfo creates a Request for interface method GetSingleTeamInfo.

This is an undocumented method.
*/
func (i *IDOTA2DPC) GetSingleTeamInfo() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetSingleTeamInfo",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}
