// Code generated by geyser. DO NOT EDIT.
// API interface: IDOTA2Plus.

package dota2

import (
	"github.com/13k/geyser/v2"
	"github.com/13k/geyser/v2/schema"
	"net/http"
)

// SchemaIDOTA2Plus stores the Interfaces for interface IDOTA2Plus.
var SchemaIDOTA2Plus = schema.MustNewInterfaces(
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetPlusStatsData",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IDOTA2Plus",
		Undocumented: true,
	},
)

// IDOTA2Plus represents interface IDOTA2Plus.
//
// This is an undocumented interface.
type IDOTA2Plus struct {
	Client    *Client
	Interface *schema.Interface
}

// NewIDOTA2Plus creates a new IDOTA2Plus interface.
func NewIDOTA2Plus(c *Client) (*IDOTA2Plus, error) {
	si, err := SchemaIDOTA2Plus.Get(schema.InterfaceKey{Name: "IDOTA2Plus"})

	if err != nil {
		return nil, err
	}

	s := &IDOTA2Plus{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// IDOTA2Plus creates a new IDOTA2Plus interface.
func (c *Client) IDOTA2Plus() (*IDOTA2Plus, error) {
	return NewIDOTA2Plus(c)
}

/*
GetPlusStatsData creates a Request for interface method GetPlusStatsData.

This is an undocumented method.
*/
func (i *IDOTA2Plus) GetPlusStatsData() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetPlusStatsData",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}
