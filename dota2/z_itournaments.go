// Code generated by geyser. DO NOT EDIT.
// API interface: ITournaments.

package dota2

import (
	"github.com/13k/geyser"
	"github.com/13k/geyser/schema"
	"net/http"
)

// SchemaITournaments stores the Interfaces for interface ITournaments.
var SchemaITournaments = schema.MustNewInterfaces(
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetGroupStandings",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetLiveLeagueGames",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetTournamentBrackets",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetTournamentInfo",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetTournamentPlayers",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetTournamentSeriesDetails",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "ITournaments",
		Undocumented: true,
	},
)

// ITournaments represents interface ITournaments.
//
// This is an undocumented interface.
type ITournaments struct {
	Client    *Client
	Interface *schema.Interface
}

// NewITournaments creates a new ITournaments interface.
func NewITournaments(c *Client) (*ITournaments, error) {
	si, err := SchemaITournaments.Get(schema.InterfaceKey{Name: "ITournaments"})

	if err != nil {
		return nil, err
	}

	s := &ITournaments{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// ITournaments creates a new ITournaments interface.
func (c *Client) ITournaments() (*ITournaments, error) {
	return NewITournaments(c)
}

/*
GetGroupStandings creates a Request for interface method GetGroupStandings.

This is an undocumented method.
*/
func (i *ITournaments) GetGroupStandings() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetGroupStandings",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
	}

	return req, nil
}

/*
GetLiveLeagueGames creates a Request for interface method GetLiveLeagueGames.

This is an undocumented method.
*/
func (i *ITournaments) GetLiveLeagueGames() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetLiveLeagueGames",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
	}

	return req, nil
}

/*
GetTournamentBrackets creates a Request for interface method GetTournamentBrackets.

This is an undocumented method.
*/
func (i *ITournaments) GetTournamentBrackets() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetTournamentBrackets",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
	}

	return req, nil
}

/*
GetTournamentInfo creates a Request for interface method GetTournamentInfo.

This is an undocumented method.
*/
func (i *ITournaments) GetTournamentInfo() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetTournamentInfo",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
	}

	return req, nil
}

/*
GetTournamentPlayers creates a Request for interface method GetTournamentPlayers.

This is an undocumented method.
*/
func (i *ITournaments) GetTournamentPlayers() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetTournamentPlayers",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
	}

	return req, nil
}

/*
GetTournamentSeriesDetails creates a Request for interface method GetTournamentSeriesDetails.

This is an undocumented method.
*/
func (i *ITournaments) GetTournamentSeriesDetails() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetTournamentSeriesDetails",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
	}

	return req, nil
}
