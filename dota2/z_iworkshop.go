// Code generated by geyser. DO NOT EDIT.
// API interface: IWorkshop.

package dota2

import (
	"github.com/13k/geyser/v2"
	"github.com/13k/geyser/v2/schema"
	"net/http"
)

// SchemaIWorkshop stores the Interfaces for interface IWorkshop.
var SchemaIWorkshop = schema.MustNewInterfaces(
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetChangeLog",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IWorkshop",
		Undocumented: true,
	},
)

// IWorkshop represents interface IWorkshop.
//
// This is an undocumented interface.
type IWorkshop struct {
	Client    *Client
	Interface *schema.Interface
}

// NewIWorkshop creates a new IWorkshop interface.
func NewIWorkshop(c *Client) (*IWorkshop, error) {
	si, err := SchemaIWorkshop.Get(schema.InterfaceKey{Name: "IWorkshop"})

	if err != nil {
		return nil, err
	}

	s := &IWorkshop{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// IWorkshop creates a new IWorkshop interface.
func (c *Client) IWorkshop() (*IWorkshop, error) {
	return NewIWorkshop(c)
}

/*
GetChangeLog creates a Request for interface method GetChangeLog.

This is an undocumented method.
*/
func (i *IWorkshop) GetChangeLog() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetChangeLog",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}
