// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: IDOTA2MatchStats.

package geyser

import "net/http"

// SchemaDOTA2MatchStats stores the SchemaInterfaces for interface IDOTA2MatchStats.
var SchemaDOTA2MatchStats = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod: http.MethodGet,
				Name:       "GetRealtimeStats",
				Params: NewSchemaMethodParams(
					&SchemaMethodParam{
						Description: "",
						Name:        "server_steam_id",
						Optional:    false,
						Type:        "uint64",
					},
				),
				Undocumented: false,
				Version:      1,
			},
		),
		Name:         "IDOTA2MatchStats_570",
		Undocumented: false,
	},
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod: http.MethodGet,
				Name:       "GetRealtimeStats",
				Params: NewSchemaMethodParams(
					&SchemaMethodParam{
						Description: "",
						Name:        "server_steam_id",
						Optional:    false,
						Type:        "uint64",
					},
				),
				Undocumented: false,
				Version:      1,
			},
		),
		Name:         "IDOTA2MatchStats_205790",
		Undocumented: false,
	},
)

// DOTA2MatchStats represents interface IDOTA2MatchStats.
//
// Supported AppIDs: 570, 205790.
type DOTA2MatchStats struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewDOTA2MatchStats creates a new DOTA2MatchStats interface.
//
// Supported AppIDs: 570, 205790.
func NewDOTA2MatchStats(c *Client, appID uint32) (*DOTA2MatchStats, error) {
	si, err := SchemaDOTA2MatchStats.Get(SchemaInterfaceKey{
		AppID: appID,
		Name:  "IDOTA2MatchStats",
	})

	if err != nil {
		return nil, err
	}

	s := &DOTA2MatchStats{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// DOTA2MatchStats creates a new DOTA2MatchStats interface.
//
// Supported AppIDs: 570, 205790.
func (c *Client) DOTA2MatchStats(appID uint32) (*DOTA2MatchStats, error) {
	return NewDOTA2MatchStats(c, appID)
}

/*
GetRealtimeStats creates a Request for interface method GetRealtimeStats.

Parameters

  * server_steam_id [uint64] (required)
*/
func (i *DOTA2MatchStats) GetRealtimeStats() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetRealtimeStats",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &DOTA2MatchStatsGetRealtimeStats{},
	}

	return req, nil
}
