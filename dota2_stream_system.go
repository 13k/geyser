// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: IDOTA2StreamSystem

package geyser

import "net/http"

// SchemaDOTA2StreamSystem stores the SchemaInterfaces for interface IDOTA2StreamSystem
var SchemaDOTA2StreamSystem = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: NewSchemaMethods(
			&SchemaMethod{
				HTTPMethod: http.MethodGet,
				Name:       "GetBroadcasterInfo",
				Params: NewSchemaMethodParams(
					&SchemaMethodParam{
						Description: "64-bit Steam ID of the broadcaster",
						Name:        "broadcaster_steam_id",
						Optional:    false,
						Type:        "uint64",
					},
					&SchemaMethodParam{
						Description: "LeagueID to use if we aren't in a lobby",
						Name:        "league_id",
						Optional:    true,
						Type:        "uint32",
					},
				),
				Version: 1,
			},
		),
		Name: "IDOTA2StreamSystem_205790",
	},
	&SchemaInterface{
		Methods: NewSchemaMethods(
			&SchemaMethod{
				HTTPMethod: http.MethodGet,
				Name:       "GetBroadcasterInfo",
				Params: NewSchemaMethodParams(
					&SchemaMethodParam{
						Description: "64-bit Steam ID of the broadcaster",
						Name:        "broadcaster_steam_id",
						Optional:    false,
						Type:        "uint64",
					},
					&SchemaMethodParam{
						Description: "LeagueID to use if we aren't in a lobby",
						Name:        "league_id",
						Optional:    true,
						Type:        "uint32",
					},
				),
				Version: 1,
			},
		),
		Name: "IDOTA2StreamSystem_570",
	},
)

// DOTA2StreamSystem represents interface IDOTA2StreamSystem
// Supported AppIDs: [205790 570]
type DOTA2StreamSystem struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewDOTA2StreamSystem creates a new DOTA2StreamSystem interface
func NewDOTA2StreamSystem(c *Client, appID uint32) (*DOTA2StreamSystem, error) {
	si, err := SchemaDOTA2StreamSystem.Get("IDOTA2StreamSystem", appID)

	if err != nil {
		return nil, err
	}

	s := &DOTA2StreamSystem{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// DOTA2StreamSystem creates a new DOTA2StreamSystem interface
func (c *Client) DOTA2StreamSystem(appID uint32) (*DOTA2StreamSystem, error) {
	return NewDOTA2StreamSystem(c, appID)
}

// GetBroadcasterInfo creates a Request for interface method GetBroadcasterInfo
func (i *DOTA2StreamSystem) GetBroadcasterInfo() (*Request, error) {
	sm, err := i.Interface.Methods.Get("GetBroadcasterInfo", 1)

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &DOTA2StreamSystemGetBroadcasterInfo{},
	}

	return req, nil
}
