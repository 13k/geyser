// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.

package geyser_test

import (
	"github.com/13k/geyser"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func TestNewEconItems(t *testing.T) {
	client := &geyser.Client{}
	appIDs := []uint32{440, 570, 620, 730, 205790, 221540, 238460, 583950}

	for _, appID := range appIDs {
		i, err := geyser.NewEconItems(client, appID)

		require.NoError(t, err)
		require.NotNil(t, i)

		assert.Same(t, client, i.Client)
		assert.NotNil(t, i.Interface)
	}
}

func TestEconItems_GetEquippedPlayerItems(t *testing.T) {
	var i *geyser.EconItems
	var err error
	var req *geyser.Request
	var result *geyser.EconItemsGetEquippedPlayerItems
	var ok bool

	client := &geyser.Client{}

	i, err = geyser.NewEconItems(client, 440)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetEquippedPlayerItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 570)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetEquippedPlayerItems()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetEquippedPlayerItems", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetEquippedPlayerItems)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 620)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetEquippedPlayerItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 730)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetEquippedPlayerItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 205790)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetEquippedPlayerItems()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetEquippedPlayerItems", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetEquippedPlayerItems)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 221540)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetEquippedPlayerItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 238460)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetEquippedPlayerItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 583950)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetEquippedPlayerItems()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetEquippedPlayerItems", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetEquippedPlayerItems)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}
}

func TestEconItems_GetPlayerItems(t *testing.T) {
	var i *geyser.EconItems
	var err error
	var req *geyser.Request
	var result *geyser.EconItemsGetPlayerItems
	var ok bool

	client := &geyser.Client{}

	i, err = geyser.NewEconItems(client, 440)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetPlayerItems()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetPlayerItems", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetPlayerItems)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 570)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetPlayerItems()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetPlayerItems", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetPlayerItems)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 620)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetPlayerItems()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetPlayerItems", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetPlayerItems)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 730)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetPlayerItems()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetPlayerItems", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetPlayerItems)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 205790)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetPlayerItems()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetPlayerItems", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetPlayerItems)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 221540)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetPlayerItems()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetPlayerItems", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetPlayerItems)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 238460)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetPlayerItems()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetPlayerItems", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetPlayerItems)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 583950)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetPlayerItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)
}

func TestEconItems_GetSchema(t *testing.T) {
	var i *geyser.EconItems
	var err error
	var req *geyser.Request
	var result *geyser.EconItemsGetSchema
	var ok bool

	client := &geyser.Client{}

	i, err = geyser.NewEconItems(client, 440)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(1)

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetSchema", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetSchema)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 440)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 570)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(1)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 570)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 620)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(1)

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetSchema", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetSchema)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 620)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 730)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(1)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 730)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(2)

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetSchema", req.Method.Name)
		assert.Equal(t, 2, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetSchema)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 205790)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(1)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 205790)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 221540)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(1)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 221540)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 238460)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(1)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 238460)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 583950)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(1)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 583950)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchema(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)
}

func TestEconItems_GetSchemaItems(t *testing.T) {
	var i *geyser.EconItems
	var err error
	var req *geyser.Request
	var result *geyser.EconItemsGetSchemaItems
	var ok bool

	client := &geyser.Client{}

	i, err = geyser.NewEconItems(client, 440)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaItems()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetSchemaItems", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetSchemaItems)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 570)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 620)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 730)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 205790)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 221540)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 238460)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 583950)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaItems()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)
}

func TestEconItems_GetSchemaOverview(t *testing.T) {
	var i *geyser.EconItems
	var err error
	var req *geyser.Request
	var result *geyser.EconItemsGetSchemaOverview
	var ok bool

	client := &geyser.Client{}

	i, err = geyser.NewEconItems(client, 440)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaOverview()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetSchemaOverview", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetSchemaOverview)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 570)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaOverview()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 620)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaOverview()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 730)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaOverview()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 205790)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaOverview()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 221540)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaOverview()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 238460)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaOverview()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 583950)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaOverview()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)
}

func TestEconItems_GetSchemaURL(t *testing.T) {
	var i *geyser.EconItems
	var err error
	var req *geyser.Request
	var result *geyser.EconItemsGetSchemaURL
	var ok bool

	client := &geyser.Client{}

	i, err = geyser.NewEconItems(client, 440)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(1)

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetSchemaURL", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetSchemaURL)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 440)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 570)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(1)

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetSchemaURL", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetSchemaURL)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 570)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 620)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(1)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 620)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 730)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(1)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 730)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(2)

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetSchemaURL", req.Method.Name)
		assert.Equal(t, 2, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetSchemaURL)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 205790)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(1)

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetSchemaURL", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetSchemaURL)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 205790)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 221540)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(1)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 221540)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 238460)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(1)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 238460)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 583950)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(1)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 583950)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetSchemaURL(2)

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)
}

func TestEconItems_GetStoreMetaData(t *testing.T) {
	var i *geyser.EconItems
	var err error
	var req *geyser.Request
	var result *geyser.EconItemsGetStoreMetaData
	var ok bool

	client := &geyser.Client{}

	i, err = geyser.NewEconItems(client, 440)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreMetaData()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetStoreMetaData", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetStoreMetaData)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 570)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreMetaData()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetStoreMetaData", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetStoreMetaData)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 620)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreMetaData()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 730)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreMetaData()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetStoreMetaData", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetStoreMetaData)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 205790)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreMetaData()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetStoreMetaData", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetStoreMetaData)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 221540)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreMetaData()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 238460)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreMetaData()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 583950)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreMetaData()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)
}

func TestEconItems_GetStoreStatus(t *testing.T) {
	var i *geyser.EconItems
	var err error
	var req *geyser.Request
	var result *geyser.EconItemsGetStoreStatus
	var ok bool

	client := &geyser.Client{}

	i, err = geyser.NewEconItems(client, 440)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreStatus()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, client, req.Client)
	assert.Same(t, i.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetStoreStatus", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}

	result, ok = req.Result.(*geyser.EconItemsGetStoreStatus)

	if assert.Truef(t, ok, "invalid result type %T", result) {
		assert.NotNil(t, result)
	}

	i, err = geyser.NewEconItems(client, 570)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreStatus()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 620)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreStatus()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 730)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreStatus()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 205790)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreStatus()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 221540)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreStatus()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 238460)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreStatus()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)

	i, err = geyser.NewEconItems(client, 583950)

	require.NoError(t, err)
	require.NotNil(t, i)

	req, err = i.GetStoreStatus()

	require.Error(t, err)

	_, ok = err.(*geyser.InterfaceMethodNotFoundError)

	assert.Truef(t, ok, "invalid error type %T", err)
}
