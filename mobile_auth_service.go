// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: IMobileAuthService.

package geyser

import "net/http"

// SchemaMobileAuthService stores the SchemaInterfaces for interface IMobileAuthService.
var SchemaMobileAuthService = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetWGToken",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IMobileAuthService",
		Undocumented: true,
	},
)

// MobileAuthService represents interface IMobileAuthService.
//
// This is an undocumented interface.
type MobileAuthService struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewMobileAuthService creates a new MobileAuthService interface.
func NewMobileAuthService(c *Client) (*MobileAuthService, error) {
	si, err := SchemaMobileAuthService.Get(SchemaInterfaceKey{Name: "IMobileAuthService"})

	if err != nil {
		return nil, err
	}

	s := &MobileAuthService{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// MobileAuthService creates a new MobileAuthService interface.
func (c *Client) MobileAuthService() (*MobileAuthService, error) {
	return NewMobileAuthService(c)
}

/*
GetWGToken creates a Request for interface method GetWGToken.

This is an undocumented method.
*/
func (i *MobileAuthService) GetWGToken() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetWGToken",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &MobileAuthServiceGetWGToken{},
	}

	return req, nil
}
