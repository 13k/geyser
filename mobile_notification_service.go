// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: IMobileNotificationService.

package geyser

import "net/http"

// SchemaMobileNotificationService stores the SchemaInterfaces for interface IMobileNotificationService.
var SchemaMobileNotificationService = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetUserNotificationCounts",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "SwitchSessionToPush",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IMobileNotificationService",
		Undocumented: true,
	},
)

// MobileNotificationService represents interface IMobileNotificationService.
//
// This is an undocumented interface.
type MobileNotificationService struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewMobileNotificationService creates a new MobileNotificationService interface.
func NewMobileNotificationService(c *Client) (*MobileNotificationService, error) {
	si, err := SchemaMobileNotificationService.Get(SchemaInterfaceKey{Name: "IMobileNotificationService"})

	if err != nil {
		return nil, err
	}

	s := &MobileNotificationService{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// MobileNotificationService creates a new MobileNotificationService interface.
func (c *Client) MobileNotificationService() (*MobileNotificationService, error) {
	return NewMobileNotificationService(c)
}

/*
GetUserNotificationCounts creates a Request for interface method GetUserNotificationCounts.

This is an undocumented method.
*/
func (i *MobileNotificationService) GetUserNotificationCounts() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetUserNotificationCounts",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &MobileNotificationServiceGetUserNotificationCounts{},
	}

	return req, nil
}

/*
SwitchSessionToPush creates a Request for interface method SwitchSessionToPush.

This is an undocumented method.
*/
func (i *MobileNotificationService) SwitchSessionToPush() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "SwitchSessionToPush",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &MobileNotificationServiceSwitchSessionToPush{},
	}

	return req, nil
}
