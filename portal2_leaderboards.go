// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: IPortal2Leaderboards.

package geyser

import "net/http"

// SchemaPortal2Leaderboards stores the SchemaInterfaces for interface IPortal2Leaderboards.
var SchemaPortal2Leaderboards = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: NewSchemaMethods(
			&SchemaMethod{
				HTTPMethod: http.MethodGet,
				Name:       "GetBucketizedData",
				Params: NewSchemaMethodParams(
					&SchemaMethodParam{
						Description: "The leaderboard name to fetch data for.",
						Name:        "leaderboardName",
						Optional:    false,
						Type:        "string",
					},
				),
				Version: 1,
			},
		),
		Name: "IPortal2Leaderboards_620",
	},
)

// Portal2Leaderboards represents interface IPortal2Leaderboards.
//
// Supported AppIDs: [620].
type Portal2Leaderboards struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewPortal2Leaderboards creates a new Portal2Leaderboards interface.
//
// Supported AppIDs: [620].
func NewPortal2Leaderboards(c *Client, appID uint32) (*Portal2Leaderboards, error) {
	si, err := SchemaPortal2Leaderboards.Get("IPortal2Leaderboards", appID)

	if err != nil {
		return nil, err
	}

	s := &Portal2Leaderboards{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// Portal2Leaderboards creates a new Portal2Leaderboards interface.
//
// Supported AppIDs: [620].
func (c *Client) Portal2Leaderboards(appID uint32) (*Portal2Leaderboards, error) {
	return NewPortal2Leaderboards(c, appID)
}

// GetBucketizedData creates a Request for interface method GetBucketizedData.
func (i *Portal2Leaderboards) GetBucketizedData() (*Request, error) {
	sm, err := i.Interface.Methods.Get("GetBucketizedData", 1)

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &Portal2LeaderboardsGetBucketizedData{},
	}

	return req, nil
}
