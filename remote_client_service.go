// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: IRemoteClientService.

package geyser

import "net/http"

// SchemaRemoteClientService stores the SchemaInterfaces for interface IRemoteClientService.
var SchemaRemoteClientService = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "NotifyRemotePacket",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "NotifyRegisterStatusUpdate",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "NotifyUnregisterStatusUpdate",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IRemoteClientService",
		Undocumented: true,
	},
)

// RemoteClientService represents interface IRemoteClientService.
//
// This is an undocumented interface.
type RemoteClientService struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewRemoteClientService creates a new RemoteClientService interface.
func NewRemoteClientService(c *Client) (*RemoteClientService, error) {
	si, err := SchemaRemoteClientService.Get(SchemaInterfaceKey{Name: "IRemoteClientService"})

	if err != nil {
		return nil, err
	}

	s := &RemoteClientService{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// RemoteClientService creates a new RemoteClientService interface.
func (c *Client) RemoteClientService() (*RemoteClientService, error) {
	return NewRemoteClientService(c)
}

/*
NotifyRegisterStatusUpdate creates a Request for interface method NotifyRegisterStatusUpdate.

This is an undocumented method.
*/
func (i *RemoteClientService) NotifyRegisterStatusUpdate() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "NotifyRegisterStatusUpdate",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &RemoteClientServiceNotifyRegisterStatusUpdate{},
	}

	return req, nil
}

/*
NotifyRemotePacket creates a Request for interface method NotifyRemotePacket.

This is an undocumented method.
*/
func (i *RemoteClientService) NotifyRemotePacket() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "NotifyRemotePacket",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &RemoteClientServiceNotifyRemotePacket{},
	}

	return req, nil
}

/*
NotifyUnregisterStatusUpdate creates a Request for interface method NotifyUnregisterStatusUpdate.

This is an undocumented method.
*/
func (i *RemoteClientService) NotifyUnregisterStatusUpdate() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "NotifyUnregisterStatusUpdate",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &RemoteClientServiceNotifyUnregisterStatusUpdate{},
	}

	return req, nil
}
