// Code generated by geyser. DO NOT EDIT.
// API interface: ICloudService.

package steam

import (
	"github.com/13k/geyser/v2"
	"github.com/13k/geyser/v2/schema"
	"net/http"
)

// SchemaICloudService stores the Interfaces for interface ICloudService.
var SchemaICloudService = schema.MustNewInterfaces(
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetUploadServerInfo",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "BeginHTTPUpload",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "CommitHTTPUpload",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetFileDetails",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "EnumerateUserFiles",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "Delete",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "ICloudService",
		Undocumented: true,
	},
)

// ICloudService represents interface ICloudService.
//
// This is an undocumented interface.
type ICloudService struct {
	Client    *Client
	Interface *schema.Interface
}

// NewICloudService creates a new ICloudService interface.
func NewICloudService(c *Client) (*ICloudService, error) {
	si, err := SchemaICloudService.Get(schema.InterfaceKey{Name: "ICloudService"})

	if err != nil {
		return nil, err
	}

	s := &ICloudService{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// ICloudService creates a new ICloudService interface.
func (c *Client) ICloudService() (*ICloudService, error) {
	return NewICloudService(c)
}

/*
BeginHTTPUpload creates a Request for interface method BeginHTTPUpload.

This is an undocumented method.
*/
func (i *ICloudService) BeginHTTPUpload() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "BeginHTTPUpload",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
CommitHTTPUpload creates a Request for interface method CommitHTTPUpload.

This is an undocumented method.
*/
func (i *ICloudService) CommitHTTPUpload() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "CommitHTTPUpload",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
Delete creates a Request for interface method Delete.

This is an undocumented method.
*/
func (i *ICloudService) Delete() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "Delete",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
EnumerateUserFiles creates a Request for interface method EnumerateUserFiles.

This is an undocumented method.
*/
func (i *ICloudService) EnumerateUserFiles() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "EnumerateUserFiles",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
GetFileDetails creates a Request for interface method GetFileDetails.

This is an undocumented method.
*/
func (i *ICloudService) GetFileDetails() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetFileDetails",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
GetUploadServerInfo creates a Request for interface method GetUploadServerInfo.

This is an undocumented method.
*/
func (i *ICloudService) GetUploadServerInfo() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetUploadServerInfo",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}
