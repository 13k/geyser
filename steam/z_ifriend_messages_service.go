// Code generated by geyser. DO NOT EDIT.
// API interface: IFriendMessagesService.

package steam

import (
	"github.com/13k/geyser/v2"
	"github.com/13k/geyser/v2/schema"
	"net/http"
)

// SchemaIFriendMessagesService stores the Interfaces for interface IFriendMessagesService.
var SchemaIFriendMessagesService = schema.MustNewInterfaces(
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetActiveMessageSessions",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetRecentMessages",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "MarkOfflineMessagesRead",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IFriendMessagesService",
		Undocumented: true,
	},
)

// IFriendMessagesService represents interface IFriendMessagesService.
//
// This is an undocumented interface.
type IFriendMessagesService struct {
	Client    *Client
	Interface *schema.Interface
}

// NewIFriendMessagesService creates a new IFriendMessagesService interface.
func NewIFriendMessagesService(c *Client) (*IFriendMessagesService, error) {
	si, err := SchemaIFriendMessagesService.Get(schema.InterfaceKey{Name: "IFriendMessagesService"})

	if err != nil {
		return nil, err
	}

	s := &IFriendMessagesService{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// IFriendMessagesService creates a new IFriendMessagesService interface.
func (c *Client) IFriendMessagesService() (*IFriendMessagesService, error) {
	return NewIFriendMessagesService(c)
}

/*
GetActiveMessageSessions creates a Request for interface method GetActiveMessageSessions.

This is an undocumented method.
*/
func (i *IFriendMessagesService) GetActiveMessageSessions() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetActiveMessageSessions",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
GetRecentMessages creates a Request for interface method GetRecentMessages.

This is an undocumented method.
*/
func (i *IFriendMessagesService) GetRecentMessages() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetRecentMessages",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
MarkOfflineMessagesRead creates a Request for interface method MarkOfflineMessagesRead.

This is an undocumented method.
*/
func (i *IFriendMessagesService) MarkOfflineMessagesRead() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "MarkOfflineMessagesRead",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}
