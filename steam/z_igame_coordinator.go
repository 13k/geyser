// Code generated by geyser. DO NOT EDIT.
// API interface: IGameCoordinator.

package steam

import (
	"github.com/13k/geyser"
	"github.com/13k/geyser/schema"
	"net/http"
)

// SchemaIGameCoordinator stores the Interfaces for interface IGameCoordinator.
var SchemaIGameCoordinator = schema.MustNewInterfaces(
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetMessages",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "PostMessages",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IGameCoordinator",
		Undocumented: true,
	},
)

// IGameCoordinator represents interface IGameCoordinator.
//
// This is an undocumented interface.
type IGameCoordinator struct {
	Client    *Client
	Interface *schema.Interface
}

// NewIGameCoordinator creates a new IGameCoordinator interface.
func NewIGameCoordinator(c *Client) (*IGameCoordinator, error) {
	si, err := SchemaIGameCoordinator.Get(schema.InterfaceKey{Name: "IGameCoordinator"})

	if err != nil {
		return nil, err
	}

	s := &IGameCoordinator{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// IGameCoordinator creates a new IGameCoordinator interface.
func (c *Client) IGameCoordinator() (*IGameCoordinator, error) {
	return NewIGameCoordinator(c)
}

/*
GetMessages creates a Request for interface method GetMessages.

This is an undocumented method.
*/
func (i *IGameCoordinator) GetMessages() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetMessages",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
PostMessages creates a Request for interface method PostMessages.

This is an undocumented method.
*/
func (i *IGameCoordinator) PostMessages() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "PostMessages",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}
