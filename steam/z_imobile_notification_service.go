// Code generated by geyser. DO NOT EDIT.
// API interface: IMobileNotificationService.

package steam

import (
	"github.com/13k/geyser/v2"
	"github.com/13k/geyser/v2/schema"
	"net/http"
)

// SchemaIMobileNotificationService stores the Interfaces for interface IMobileNotificationService.
var SchemaIMobileNotificationService = schema.MustNewInterfaces(
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "GetUserNotificationCounts",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "SwitchSessionToPush",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IMobileNotificationService",
		Undocumented: true,
	},
)

// IMobileNotificationService represents interface IMobileNotificationService.
//
// This is an undocumented interface.
type IMobileNotificationService struct {
	Client    *Client
	Interface *schema.Interface
}

// NewIMobileNotificationService creates a new IMobileNotificationService interface.
func NewIMobileNotificationService(c *Client) (*IMobileNotificationService, error) {
	si, err := SchemaIMobileNotificationService.Get(schema.InterfaceKey{Name: "IMobileNotificationService"})

	if err != nil {
		return nil, err
	}

	s := &IMobileNotificationService{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// IMobileNotificationService creates a new IMobileNotificationService interface.
func (c *Client) IMobileNotificationService() (*IMobileNotificationService, error) {
	return NewIMobileNotificationService(c)
}

/*
GetUserNotificationCounts creates a Request for interface method GetUserNotificationCounts.

This is an undocumented method.
*/
func (i *IMobileNotificationService) GetUserNotificationCounts() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetUserNotificationCounts",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}

/*
SwitchSessionToPush creates a Request for interface method SwitchSessionToPush.

This is an undocumented method.
*/
func (i *IMobileNotificationService) SwitchSessionToPush() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "SwitchSessionToPush",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}
