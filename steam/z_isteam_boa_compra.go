// Code generated by geyser. DO NOT EDIT.
// API interface: ISteamBoaCompra.

package steam

import (
	"github.com/13k/geyser"
	"github.com/13k/geyser/schema"
	"net/http"
)

// SchemaISteamBoaCompra stores the Interfaces for interface ISteamBoaCompra.
var SchemaISteamBoaCompra = schema.MustNewInterfaces(
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod:   http.MethodGet,
				Name:         "BoaCompraCheckTransactionStatus",
				Params:       schema.NewMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "ISteamBoaCompra",
		Undocumented: true,
	},
)

// ISteamBoaCompra represents interface ISteamBoaCompra.
//
// This is an undocumented interface.
type ISteamBoaCompra struct {
	Client    *Client
	Interface *schema.Interface
}

// NewISteamBoaCompra creates a new ISteamBoaCompra interface.
func NewISteamBoaCompra(c *Client) (*ISteamBoaCompra, error) {
	si, err := SchemaISteamBoaCompra.Get(schema.InterfaceKey{Name: "ISteamBoaCompra"})

	if err != nil {
		return nil, err
	}

	s := &ISteamBoaCompra{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// ISteamBoaCompra creates a new ISteamBoaCompra interface.
func (c *Client) ISteamBoaCompra() (*ISteamBoaCompra, error) {
	return NewISteamBoaCompra(c)
}

/*
BoaCompraCheckTransactionStatus creates a Request for interface method BoaCompraCheckTransactionStatus.

This is an undocumented method.
*/
func (i *ISteamBoaCompra) BoaCompraCheckTransactionStatus() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "BoaCompraCheckTransactionStatus",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := geyser.NewRequest(i.Interface, sm)

	return req, nil
}
