// Code generated by geyser. DO NOT EDIT.

package steam_test

import (
	"github.com/13k/geyser"
	"github.com/13k/geyser/steam"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func TestNewISteamGameOAuth(t *testing.T) {
	client, err := steam.New()

	require.NoError(t, err)
	require.NotNil(t, client)

	ci, err := steam.NewISteamGameOAuth(client)

	require.NoError(t, err)
	require.NotNil(t, ci)

	assert.Same(t, client, ci.Client)
	assert.NotNil(t, ci.Interface)
}

func TestISteamGameOAuth_GetAppInfo(t *testing.T) {
	var ci *steam.ISteamGameOAuth
	var err error
	var req *geyser.Request

	client, err := steam.New()

	require.NoError(t, err)
	require.NotNil(t, client)

	ci, err = steam.NewISteamGameOAuth(client)

	require.NoError(t, err)
	require.NotNil(t, ci)

	req, err = ci.GetAppInfo()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, ci.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetAppInfo", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}
}

func TestISteamGameOAuth_GetPackageInfo(t *testing.T) {
	var ci *steam.ISteamGameOAuth
	var err error
	var req *geyser.Request

	client, err := steam.New()

	require.NoError(t, err)
	require.NotNil(t, client)

	ci, err = steam.NewISteamGameOAuth(client)

	require.NoError(t, err)
	require.NotNil(t, ci)

	req, err = ci.GetPackageInfo()

	require.NoError(t, err)
	require.NotNil(t, req)

	assert.Same(t, ci.Interface, req.Interface)

	if assert.NotNil(t, req.Method) {
		assert.Equal(t, "GetPackageInfo", req.Method.Name)
		assert.Equal(t, 1, req.Method.Version)
	}
}
