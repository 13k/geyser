// Code generated by geyser. DO NOT EDIT.
// API interface: ITFPromos.

package steam

import (
	"github.com/13k/geyser"
	"github.com/13k/geyser/schema"
	"net/http"
)

// SchemaITFPromos stores the Interfaces for interface ITFPromos.
var SchemaITFPromos = schema.MustNewInterfaces(
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod: http.MethodGet,
				Name:       "GetItemID",
				Params: schema.NewMethodParams(
					&schema.MethodParam{
						Description: "The Steam ID to fetch items for",
						Name:        "steamid",
						Optional:    false,
						Type:        "uint64",
					},
					&schema.MethodParam{
						Description: "The promo ID to grant an item for",
						Name:        "promoid",
						Optional:    false,
						Type:        "uint32",
					},
				),
				Undocumented: false,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod: http.MethodPost,
				Name:       "GrantItem",
				Params: schema.NewMethodParams(
					&schema.MethodParam{
						Description: "The Steam ID to fetch items for",
						Name:        "steamid",
						Optional:    false,
						Type:        "uint64",
					},
					&schema.MethodParam{
						Description: "The promo ID to grant an item for",
						Name:        "promoid",
						Optional:    false,
						Type:        "uint32",
					},
				),
				Undocumented: false,
				Version:      1,
			},
		),
		Name:         "ITFPromos_440",
		Undocumented: false,
	},
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod: http.MethodGet,
				Name:       "GetItemID",
				Params: schema.NewMethodParams(
					&schema.MethodParam{
						Description: "The Steam ID to fetch items for",
						Name:        "steamid",
						Optional:    false,
						Type:        "uint64",
					},
					&schema.MethodParam{
						Description: "The promo ID to grant an item for",
						Name:        "promoid",
						Optional:    false,
						Type:        "uint32",
					},
				),
				Undocumented: false,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod: http.MethodPost,
				Name:       "GrantItem",
				Params: schema.NewMethodParams(
					&schema.MethodParam{
						Description: "The Steam ID to fetch items for",
						Name:        "steamid",
						Optional:    false,
						Type:        "uint64",
					},
					&schema.MethodParam{
						Description: "The promo ID to grant an item for",
						Name:        "promoid",
						Optional:    false,
						Type:        "uint32",
					},
				),
				Undocumented: false,
				Version:      1,
			},
		),
		Name:         "ITFPromos_570",
		Undocumented: false,
	},
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod: http.MethodGet,
				Name:       "GetItemID",
				Params: schema.NewMethodParams(
					&schema.MethodParam{
						Description: "The Steam ID to fetch items for",
						Name:        "steamid",
						Optional:    false,
						Type:        "uint64",
					},
					&schema.MethodParam{
						Description: "The promo ID to grant an item for",
						Name:        "PromoID",
						Optional:    false,
						Type:        "uint32",
					},
				),
				Undocumented: false,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod: http.MethodPost,
				Name:       "GrantItem",
				Params: schema.NewMethodParams(
					&schema.MethodParam{
						Description: "The Steam ID to fetch items for",
						Name:        "steamid",
						Optional:    false,
						Type:        "uint64",
					},
					&schema.MethodParam{
						Description: "The promo ID to grant an item for",
						Name:        "PromoID",
						Optional:    false,
						Type:        "uint32",
					},
				),
				Undocumented: false,
				Version:      1,
			},
		),
		Name:         "ITFPromos_620",
		Undocumented: false,
	},
	&schema.Interface{
		Methods: schema.MustNewMethods(
			&schema.Method{
				HTTPMethod: http.MethodGet,
				Name:       "GetItemID",
				Params: schema.NewMethodParams(
					&schema.MethodParam{
						Description: "The Steam ID to fetch items for",
						Name:        "steamid",
						Optional:    false,
						Type:        "uint64",
					},
					&schema.MethodParam{
						Description: "The promo ID to grant an item for",
						Name:        "promoid",
						Optional:    false,
						Type:        "uint32",
					},
				),
				Undocumented: false,
				Version:      1,
			},
			&schema.Method{
				HTTPMethod: http.MethodPost,
				Name:       "GrantItem",
				Params: schema.NewMethodParams(
					&schema.MethodParam{
						Description: "The Steam ID to fetch items for",
						Name:        "steamid",
						Optional:    false,
						Type:        "uint64",
					},
					&schema.MethodParam{
						Description: "The promo ID to grant an item for",
						Name:        "promoid",
						Optional:    false,
						Type:        "uint32",
					},
				),
				Undocumented: false,
				Version:      1,
			},
		),
		Name:         "ITFPromos_205790",
		Undocumented: false,
	},
)

// ITFPromos represents interface ITFPromos.
//
// Supported AppIDs: 440, 570, 620, 205790.
type ITFPromos struct {
	Client    *Client
	Interface *schema.Interface
}

// NewITFPromos creates a new ITFPromos interface.
//
// Supported AppIDs: 440, 570, 620, 205790.
func NewITFPromos(c *Client, appID uint32) (*ITFPromos, error) {
	si, err := SchemaITFPromos.Get(schema.InterfaceKey{
		AppID: appID,
		Name:  "ITFPromos",
	})

	if err != nil {
		return nil, err
	}

	s := &ITFPromos{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// ITFPromos creates a new ITFPromos interface.
//
// Supported AppIDs: 440, 570, 620, 205790.
func (c *Client) ITFPromos(appID uint32) (*ITFPromos, error) {
	return NewITFPromos(c, appID)
}

/*
GetItemID creates a Request for interface method GetItemID.

Parameters

  * steamid [uint64] (required): The Steam ID to fetch items for
  * PromoID [uint32] (required): The promo ID to grant an item for
*/
func (i *ITFPromos) GetItemID() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GetItemID",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
	}

	return req, nil
}

/*
GrantItem creates a Request for interface method GrantItem.

Parameters

  * steamid [uint64] (required): The Steam ID to fetch items for
  * PromoID [uint32] (required): The promo ID to grant an item for
*/
func (i *ITFPromos) GrantItem() (*geyser.Request, error) {
	sm, err := i.Interface.Methods.Get(schema.MethodKey{
		Name:    "GrantItem",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &geyser.Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
	}

	return req, nil
}
