// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: ISteamGameOAuth.

package geyser

import "net/http"

// SchemaSteamGameOAuth stores the SchemaInterfaces for interface ISteamGameOAuth.
var SchemaSteamGameOAuth = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetAppInfo",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetPackageInfo",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "ISteamGameOAuth",
		Undocumented: true,
	},
)

// SteamGameOAuth represents interface ISteamGameOAuth.
//
// This is an undocumented interface.
type SteamGameOAuth struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewSteamGameOAuth creates a new SteamGameOAuth interface.
func NewSteamGameOAuth(c *Client) (*SteamGameOAuth, error) {
	si, err := SchemaSteamGameOAuth.Get(SchemaInterfaceKey{Name: "ISteamGameOAuth"})

	if err != nil {
		return nil, err
	}

	s := &SteamGameOAuth{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// SteamGameOAuth creates a new SteamGameOAuth interface.
func (c *Client) SteamGameOAuth() (*SteamGameOAuth, error) {
	return NewSteamGameOAuth(c)
}

/*
GetAppInfo creates a Request for interface method GetAppInfo.

This is an undocumented method.
*/
func (i *SteamGameOAuth) GetAppInfo() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetAppInfo",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &SteamGameOAuthGetAppInfo{},
	}

	return req, nil
}

/*
GetPackageInfo creates a Request for interface method GetPackageInfo.

This is an undocumented method.
*/
func (i *SteamGameOAuth) GetPackageInfo() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetPackageInfo",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &SteamGameOAuthGetPackageInfo{},
	}

	return req, nil
}
