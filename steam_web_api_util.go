// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: ISteamWebAPIUtil.

package geyser

import "net/http"

// SchemaSteamWebAPIUtil stores the SchemaInterfaces for interface ISteamWebAPIUtil.
var SchemaSteamWebAPIUtil = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetServerInfo",
				Params:       NewSchemaMethodParams(),
				Undocumented: false,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod: http.MethodGet,
				Name:       "GetSupportedAPIList",
				Params: NewSchemaMethodParams(
					&SchemaMethodParam{
						Description: "access key",
						Name:        "key",
						Optional:    true,
						Type:        "string",
					},
				),
				Undocumented: false,
				Version:      1,
			},
		),
		Name:         "ISteamWebAPIUtil",
		Undocumented: false,
	},
)

// SteamWebAPIUtil represents interface ISteamWebAPIUtil.
type SteamWebAPIUtil struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewSteamWebAPIUtil creates a new SteamWebAPIUtil interface.
func NewSteamWebAPIUtil(c *Client) (*SteamWebAPIUtil, error) {
	si, err := SchemaSteamWebAPIUtil.Get(SchemaInterfaceKey{Name: "ISteamWebAPIUtil"})

	if err != nil {
		return nil, err
	}

	s := &SteamWebAPIUtil{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// SteamWebAPIUtil creates a new SteamWebAPIUtil interface.
func (c *Client) SteamWebAPIUtil() (*SteamWebAPIUtil, error) {
	return NewSteamWebAPIUtil(c)
}

// GetServerInfo creates a Request for interface method GetServerInfo.
func (i *SteamWebAPIUtil) GetServerInfo() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetServerInfo",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &SteamWebAPIUtilGetServerInfo{},
	}

	return req, nil
}

/*
GetSupportedAPIList creates a Request for interface method GetSupportedAPIList.

Parameters

  * key [string]: access key
*/
func (i *SteamWebAPIUtil) GetSupportedAPIList() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetSupportedAPIList",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &SteamWebAPIUtilGetSupportedAPIList{},
	}

	return req, nil
}
