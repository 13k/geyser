// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: ITFItems.

package geyser

import "net/http"

// SchemaTFItems stores the SchemaInterfaces for interface ITFItems.
var SchemaTFItems = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: NewSchemaMethods(
			&SchemaMethod{
				HTTPMethod: http.MethodGet,
				Name:       "GetGoldenWrenches",
				Params:     NewSchemaMethodParams(),
				Version:    1,
			},
			&SchemaMethod{
				HTTPMethod: http.MethodGet,
				Name:       "GetGoldenWrenches",
				Params:     NewSchemaMethodParams(),
				Version:    2,
			},
		),
		Name: "ITFItems_440",
	},
)

// TFItems represents interface ITFItems.
//
// Supported AppIDs: [440].
type TFItems struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewTFItems creates a new TFItems interface.
//
// Supported AppIDs: [440].
func NewTFItems(c *Client, appID uint32) (*TFItems, error) {
	si, err := SchemaTFItems.Get("ITFItems", appID)

	if err != nil {
		return nil, err
	}

	s := &TFItems{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// TFItems creates a new TFItems interface.
//
// Supported AppIDs: [440].
func (c *Client) TFItems(appID uint32) (*TFItems, error) {
	return NewTFItems(c, appID)
}

// GetGoldenWrenches creates a Request for interface method GetGoldenWrenches.
//
// Supported versions: [1 2].
func (i *TFItems) GetGoldenWrenches(version int) (*Request, error) {
	sm, err := i.Interface.Methods.Get("GetGoldenWrenches", version)

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TFItemsGetGoldenWrenches{},
	}

	return req, nil
}
