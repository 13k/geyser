// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: ITwoFactorService.

package geyser

import "net/http"

// SchemaTwoFactorService stores the SchemaInterfaces for interface ITwoFactorService.
var SchemaTwoFactorService = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "AddAuthenticator",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "RecoverAuthenticatorCommit",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "RecoverAuthenticatorContinue",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "RemoveAuthenticator",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "RemoveAuthenticatorViaChallengeStart",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "RemoveAuthenticatorViaChallengeContinue",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "FinalizeAddAuthenticator",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "QueryStatus",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "QueryTime",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "QuerySecrets",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "SendEmail",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "ValidateToken",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "CreateEmergencyCodes",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "DestroyEmergencyCodes",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "ITwoFactorService",
		Undocumented: true,
	},
)

// TwoFactorService represents interface ITwoFactorService.
//
// This is an undocumented interface.
type TwoFactorService struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewTwoFactorService creates a new TwoFactorService interface.
func NewTwoFactorService(c *Client) (*TwoFactorService, error) {
	si, err := SchemaTwoFactorService.Get(SchemaInterfaceKey{Name: "ITwoFactorService"})

	if err != nil {
		return nil, err
	}

	s := &TwoFactorService{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// TwoFactorService creates a new TwoFactorService interface.
func (c *Client) TwoFactorService() (*TwoFactorService, error) {
	return NewTwoFactorService(c)
}

/*
AddAuthenticator creates a Request for interface method AddAuthenticator.

This is an undocumented method.
*/
func (i *TwoFactorService) AddAuthenticator() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "AddAuthenticator",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceAddAuthenticator{},
	}

	return req, nil
}

/*
CreateEmergencyCodes creates a Request for interface method CreateEmergencyCodes.

This is an undocumented method.
*/
func (i *TwoFactorService) CreateEmergencyCodes() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "CreateEmergencyCodes",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceCreateEmergencyCodes{},
	}

	return req, nil
}

/*
DestroyEmergencyCodes creates a Request for interface method DestroyEmergencyCodes.

This is an undocumented method.
*/
func (i *TwoFactorService) DestroyEmergencyCodes() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "DestroyEmergencyCodes",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceDestroyEmergencyCodes{},
	}

	return req, nil
}

/*
FinalizeAddAuthenticator creates a Request for interface method FinalizeAddAuthenticator.

This is an undocumented method.
*/
func (i *TwoFactorService) FinalizeAddAuthenticator() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "FinalizeAddAuthenticator",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceFinalizeAddAuthenticator{},
	}

	return req, nil
}

/*
QuerySecrets creates a Request for interface method QuerySecrets.

This is an undocumented method.
*/
func (i *TwoFactorService) QuerySecrets() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "QuerySecrets",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceQuerySecrets{},
	}

	return req, nil
}

/*
QueryStatus creates a Request for interface method QueryStatus.

This is an undocumented method.
*/
func (i *TwoFactorService) QueryStatus() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "QueryStatus",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceQueryStatus{},
	}

	return req, nil
}

/*
QueryTime creates a Request for interface method QueryTime.

This is an undocumented method.
*/
func (i *TwoFactorService) QueryTime() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "QueryTime",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceQueryTime{},
	}

	return req, nil
}

/*
RecoverAuthenticatorCommit creates a Request for interface method RecoverAuthenticatorCommit.

This is an undocumented method.
*/
func (i *TwoFactorService) RecoverAuthenticatorCommit() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "RecoverAuthenticatorCommit",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceRecoverAuthenticatorCommit{},
	}

	return req, nil
}

/*
RecoverAuthenticatorContinue creates a Request for interface method RecoverAuthenticatorContinue.

This is an undocumented method.
*/
func (i *TwoFactorService) RecoverAuthenticatorContinue() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "RecoverAuthenticatorContinue",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceRecoverAuthenticatorContinue{},
	}

	return req, nil
}

/*
RemoveAuthenticator creates a Request for interface method RemoveAuthenticator.

This is an undocumented method.
*/
func (i *TwoFactorService) RemoveAuthenticator() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "RemoveAuthenticator",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceRemoveAuthenticator{},
	}

	return req, nil
}

/*
RemoveAuthenticatorViaChallengeContinue creates a Request for interface method RemoveAuthenticatorViaChallengeContinue.

This is an undocumented method.
*/
func (i *TwoFactorService) RemoveAuthenticatorViaChallengeContinue() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "RemoveAuthenticatorViaChallengeContinue",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceRemoveAuthenticatorViaChallengeContinue{},
	}

	return req, nil
}

/*
RemoveAuthenticatorViaChallengeStart creates a Request for interface method RemoveAuthenticatorViaChallengeStart.

This is an undocumented method.
*/
func (i *TwoFactorService) RemoveAuthenticatorViaChallengeStart() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "RemoveAuthenticatorViaChallengeStart",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceRemoveAuthenticatorViaChallengeStart{},
	}

	return req, nil
}

/*
SendEmail creates a Request for interface method SendEmail.

This is an undocumented method.
*/
func (i *TwoFactorService) SendEmail() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "SendEmail",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceSendEmail{},
	}

	return req, nil
}

/*
ValidateToken creates a Request for interface method ValidateToken.

This is an undocumented method.
*/
func (i *TwoFactorService) ValidateToken() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "ValidateToken",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &TwoFactorServiceValidateToken{},
	}

	return req, nil
}
