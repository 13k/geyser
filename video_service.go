// Code generated by github.com/13k/geyser/apigen. DO NOT EDIT.
// API interface: IVideoService.

package geyser

import "net/http"

// SchemaVideoService stores the SchemaInterfaces for interface IVideoService.
var SchemaVideoService = MustNewSchemaInterfaces(
	&SchemaInterface{
		Methods: MustNewSchemaMethods(
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "SetVideoBookmark",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
			&SchemaMethod{
				HTTPMethod:   http.MethodGet,
				Name:         "GetVideoBookmarks",
				Params:       NewSchemaMethodParams(),
				Undocumented: true,
				Version:      1,
			},
		),
		Name:         "IVideoService",
		Undocumented: true,
	},
)

// VideoService represents interface IVideoService.
//
// This is an undocumented interface.
type VideoService struct {
	Client    *Client
	Interface *SchemaInterface
}

// NewVideoService creates a new VideoService interface.
func NewVideoService(c *Client) (*VideoService, error) {
	si, err := SchemaVideoService.Get(SchemaInterfaceKey{Name: "IVideoService"})

	if err != nil {
		return nil, err
	}

	s := &VideoService{
		Client:    c,
		Interface: si,
	}

	return s, nil
}

// VideoService creates a new VideoService interface.
func (c *Client) VideoService() (*VideoService, error) {
	return NewVideoService(c)
}

/*
GetVideoBookmarks creates a Request for interface method GetVideoBookmarks.

This is an undocumented method.
*/
func (i *VideoService) GetVideoBookmarks() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "GetVideoBookmarks",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &VideoServiceGetVideoBookmarks{},
	}

	return req, nil
}

/*
SetVideoBookmark creates a Request for interface method SetVideoBookmark.

This is an undocumented method.
*/
func (i *VideoService) SetVideoBookmark() (*Request, error) {
	sm, err := i.Interface.Methods.Get(SchemaMethodKey{
		Name:    "SetVideoBookmark",
		Version: 1,
	})

	if err != nil {
		return nil, err
	}

	req := &Request{
		Client:    i.Client,
		Interface: i.Interface,
		Method:    sm,
		Result:    &VideoServiceSetVideoBookmark{},
	}

	return req, nil
}
